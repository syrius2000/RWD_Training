--重複順列を得る SQL
SELECT P1.name AS name_1, P2.name AS name_2
  FROM Products P1 CROSS JOIN Products P2;

SELECT P1.name AS name_1, P2.name AS name_2
  FROM Products P1, Products P2;


--順列を得る SQL
SELECT P1.name AS name_1, P2.name AS name_2
  FROM Products P1 INNER JOIN Products P2
    ON P1.name <> P2.name;


-- 組み合わせを得るSQL
SELECT P1.name AS name_1, P2.name AS name_2
  FROM Products P1 INNER JOIN Products P2
    ON P1.name > P2.name;

-- 組み合わせを得るSQL：3列への拡張版
SELECT P1.name AS name_1,
       P2.name AS name_2,
       P3.name AS name_3
  FROM Products P1
         INNER JOIN Products P2
          ON P1.name > P2.name
            INNER JOIN Products P3
              ON P2.name > P3.name;



-- 重複行を削除する SQLその 1：極値関数の利用
DELETE FROM Products P1
 WHERE rowid < ( SELECT MAX(P2.rowid)
                   FROM Products P2
                  WHERE P1.name = P2. name
                    AND P1.price = P2.price );


--重複行を削除する SQLその 2：非等値結合の利用
DELETE FROM Products P1
 WHERE EXISTS ( SELECT *
                  FROM Products P2
                 WHERE P1.name = P2.name
                   AND P1.price = P2.price
                   AND P1.rowid < P2.rowid );



--同じ家族だけど、住所が違うレコードを検索する SQL
SELECT DISTINCT A1.name, A1.address
  FROM Addresses A1 INNER JOIN Addresses A2
    ON A1.family_id = A2.family_id
   AND A1.address <> A2.address ;


--同じ値段だけど、商品名が違うレコードを検索する SQL
SELECT DISTINCT P1.name, P1.price
  FROM Products P1 INNER JOIN Products P2
    ON P1.price = P2.price
   AND P1.name <> P2.name
 ORDER BY P1.price;


--ランキング算出：ウィンドウ関数の利用
SELECT name, price,
       RANK() OVER (ORDER BY price DESC) AS rank_1,
       DENSE_RANK() OVER (ORDER BY price DESC) AS rank_2
  FROM Products;


--ランキング1位から始まる。同順位が続いた後は不連続
SELECT P1.name, P1.price,
       (SELECT COUNT(P2.price)
          FROM Products P2
         WHERE P2.price > P1.price) + 1 AS rank_1
  FROM Products P1;


--ランキングを求める：自己結合の利用
SELECT P1.name, MAX(P1.price) AS price,
       COUNT(P2.name) +1 AS rank_1
  FROM Products P1 LEFT OUTER JOIN Products P2
    ON P1.price < P2.price GROUP BY P1.name;

--非集約化して、集合の包含関係を調べる
SELECT P1.name, P2.name
  FROM Products P1 LEFT OUTER JOIN Products P2
    ON P1.price < P2.price;



